//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: MixFaceFader.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "MixFaceFaderBase.h"


// Declare the bitmap loading function
extern void MixFaceFaderInitBitmapResources();

static bool bBitmapLoaded = false;


MixFaceFaderBase::MixFaceFaderBase(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style)
    : wxPanel(parent, id, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        MixFaceFaderInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* mainPanelSizer1 = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(mainPanelSizer1);
    
    wxBoxSizer* boxSizer147 = new wxBoxSizer(wxVERTICAL);
    
    mainPanelSizer1->Add(boxSizer147, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_button772 = new wxButton(this, wxID_ANY, _("SRC"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    boxSizer147->Add(m_button772, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_button793 = new wxButton(this, wxID_ANY, _("EQ"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    boxSizer147->Add(m_button793, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_button814 = new wxButton(this, wxID_ANY, _("DYN"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    boxSizer147->Add(m_button814, 0, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    
    m_button835 = new wxButton(this, wxID_ANY, _("MUTE"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    mainPanelSizer1->Add(m_button835, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_slider916 = new wxSlider(this, wxID_ANY, 50, 0, 100, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxSL_HORIZONTAL);
    
    mainPanelSizer1->Add(m_slider916, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    wxBoxSizer* boxSizer937 = new wxBoxSizer(wxHORIZONTAL);
    
    mainPanelSizer1->Add(boxSizer937, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    boxSizer937->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));
    
    wxBoxSizer* boxSizer1079 = new wxBoxSizer(wxVERTICAL);
    
    boxSizer937->Add(boxSizer1079, 1, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    boxSizer1079->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));
    
    wxBoxSizer* boxSizer10411 = new wxBoxSizer(wxHORIZONTAL);
    
    boxSizer1079->Add(boxSizer10411, 3, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_panel102212 = new singleDBMeterPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    boxSizer10411->Add(m_panel102212, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    m_panel102212->SetMinSize(wxSize(16,-1));
    
    m_panel10213 = new singleDBMeterPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxTAB_TRAVERSAL);
    
    boxSizer10411->Add(m_panel10213, 1, wxALL|wxEXPAND, WXC_FROM_DIP(0));
    m_panel10213->SetMinSize(wxSize(16,-1));
    
    m_slider75114 = new wxSlider(this, wxID_ANY, 50, 0, 100, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), wxSL_INVERSE|wxSL_VERTICAL);
    
    boxSizer937->Add(m_slider75114, 1, wxALL|wxEXPAND|wxALIGN_CENTER, WXC_FROM_DIP(5));
    m_slider75114->SetMinSize(wxSize(-1,999999));
    
    boxSizer937->Add(0, 0, 1, wxALL, WXC_FROM_DIP(5));
    
    m_button8516 = new wxButton(this, wxID_ANY, _("SOLO"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1,-1)), 0);
    
    mainPanelSizer1->Add(m_button8516, 0, wxALL|wxEXPAND, WXC_FROM_DIP(5));
    
    m_bmpButton8917 = new wxBitmapButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("33W")), wxDefaultPosition, wxDLG_UNIT(this, wxSize(118,118)), wxBU_AUTODRAW|wxBORDER_NONE);
    m_bmpButton8917->SetBackgroundColour(wxColour(wxT("rgb(96,96,96)")));
    
    mainPanelSizer1->Add(m_bmpButton8917, 0, wxALL, WXC_FROM_DIP(5));
    m_bmpButton8917->SetMinSize(wxSize(118,118));
    
    SetName(wxT("MixFaceFaderBase"));
    SetMinClientSize(wxSize(128,600));
    SetSize(wxDLG_UNIT(this, wxSize(128,600)));
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
}

MixFaceFaderBase::~MixFaceFaderBase()
{
}
